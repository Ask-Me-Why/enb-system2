<style lang="scss" scoped>
  @import '~@/styles/mixins', '~@/styles/variables';
  .mi-box.team{
    padding:.15rem;
    .mi-tab-btns {
      position: relative;
    }
  }
  .alreadyBtn ,.cancelBtn{
    padding: 0 .6rem!important;
  }
</style>
<template>
  <div class="match-team">
    <enb-tab>车队管理</enb-tab>
    <div class="mi-box team">
      <div class="mi-tab-btns">
        <ask-button class="alreadyBtn white clicked">
         已发布文件
        </ask-button>
        <ask-button class="cancelBtn">
          未发布文件
        </ask-button>
      </div>
    </div>
    <div class="mi-box">
      <div class="mi-tab-btns">
        <ask-button class="add">
          <i class="iconfont icon-add"></i>
          新增
        </ask-button>
      </div>
      <el-tabs tab-position="top" class="mi-tabs" v-model="selectedTab">
        <template v-for="(menu,$i) in menuList">
          <el-tab-pane :key="$i">
            <div slot="label" class="mi-tab-label">
              {{menu.name}}
            </div>
            <template v-if="menu.type == 'information'">
              <information></information>
            </template>
            <template v-else-if="menu.type == 'arbitration'">
              <arbitration></arbitration>
            </template>
            <template v-else>
              <notice></notice>
            </template>
          </el-tab-pane>
        </template>
      </el-tabs>
    </div>
  </div>
</template>

<script>
  import Information from '@core/matchFile/information.vue';
  import arbitration from '@core/matchFile/arbitration.vue';
  import notice from '@core/matchFile/notice.vue';
  import { askDialogConfirm,askDialogToast,merge } from '@/utils';
  import { TeamManageApi } from '@/services';
  import { mapGetters } from 'vuex';

  export default {
		name: "MatchFile",
    components:{
      Information,
      arbitration,
      notice
    },
    mounted(){

    },
    data() {
      return {
        selectedTab: '0',
        teamApi: new TeamManageApi(),
        pageSize: 10,
        pageCount: 0,
        time: "",
        timeList: [],
        tableData: [],
        menuList:[
          { name: '通知', type: 'information'},
          { name: '仲裁', type: 'arbitration'},
          { name: '公告', type: 'notice'}
        ],
      }
    },
    computed:{
      page:{
        get(){
          return Number(sessionStorage.getItem(this.$route.path) || 1);
        },
        set(val){
          sessionStorage.setItem(this.$route.path,val);
        }
      }
    },
    methods: {
      popupCreateDialog () {
        dialogMatchTeam({
          title: '车队信息',
          sure: (vm, model) => {
            this.$store.dispatch('ajaxRequestStart');
            this.teamApi.create({
              name: model.name,
              manager: model.manager,
              phone: model.phone,
              competition_id: this.$route.params.matchId
            }).then(r=>{
              this.$store.dispatch('ajaxRequestEnd');
              if(r.data.code != 200) return;
              vm.close();
              askDialogToast({msg:`已成功创建"${model.name}"车队！`,time:2000,class:'success'});
              this.getList();
            },err=>{
              this.$store.dispatch('ajaxRequestEnd');
            })
          },
          cancel:(vm)=>{}
        })
      },
      popupUpdateDialog (item) {
        dialogMatchTeam({
          title: '车队信息',
          item,
          sure: (vm, model) => {
            this.$store.dispatch('ajaxRequestStart');
            this.teamApi.update({
              id: model.id,
              name: model.name,
              manager: model.manager,
              phone: model.phone,
              competition_id: this.$route.params.matchId
            }).then(r=>{
              this.$store.dispatch('ajaxRequestEnd');
              if(r.data.code != 200) return;
              vm.close();
              askDialogToast({msg:`已成功修改"${model.name}"车队！`,time:2000,class:'success'});
              this.getList();
            },err=>{
              this.$store.dispatch('ajaxRequestEnd');
            })
          },
          cancel:(vm)=>{}
        })
      },
      popupRemoveDialog(item) {
        askDialogConfirm({
          content: `删除“${item.name}”车队将会删除车队内的车辆信息，是否删除?`,
          title: '提示',
          theme:'enb-confirm'
        },(vm)=>{
          this.$store.dispatch('ajaxRequestStart');
          this.teamApi.remove(item.id).then(r=>{
            this.$store.dispatch('ajaxRequestEnd');
            if(r.data.code != 200) return;
            vm.close();
            askDialogToast({msg:`已成功删除"${item.name}"车队！`,time:2000,class:'success'});
            this.getList();
          },err=>{
            this.$store.dispatch('ajaxRequestEnd');
          })
        })
      },
      getList(){
        this.$store.dispatch('ajaxRequestStart');
        this.teamApi.query({
          competition_id: this.$route.params.matchId,
          page: this.page,
          time: this.time
        }).then(r=>{
          this.$store.dispatch('ajaxRequestEnd');
          if(r.data.code != 200) return;
          let res = r.data.data;
          this.tableData = res.list;
          this.pageCount = res.pageCount;
          let _min = Number(res.min), _max = Number(res.max);
          let _list = []
          for(let i = _min,l = _max; i <= l ; i++){
            _list.push(i);
          }
          this.timeList = [..._list];
        },err=>{
          this.$store.dispatch('ajaxRequestEnd');
        })
      }
    }
	}
</script>

<style scoped>

</style>
